from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'a7a6e3cd5add'
down_revision = 'c7ae376422b3'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('post', schema=None) as batch_op:
        batch_op.alter_column('date_pub',
               existing_type=sa.VARCHAR(),
               type_=sa.DateTime(),
               postgresql_using='date_pub::timestamp without time zone',
               nullable=True)

    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.alter_column('date_r',
               existing_type=sa.VARCHAR(),
               type_=sa.DateTime(),
               postgresql_using='date_r::timestamp without time zone',
               nullable=True)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.alter_column('date_r',
               existing_type=sa.DateTime(),
               type_=sa.VARCHAR(),
               nullable=True)

    with op.batch_alter_table('post', schema=None) as batch_op:
        batch_op.alter_column('date_pub',
               existing_type=sa.DateTime(),
               type_=sa.VARCHAR(),
               nullable=True)
    # ### end Alembic commands ###
